What happens when you initialize a repository? Why do you need to do it?
	sets up the files to be added to the git instrument

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	staging makes the folders/files ready to be committed, working directory  is  a place where regular edits are made to the file, without any intension to commit the changes.
	
How can you use the staging area to make sure you have one commit per logical
change?
	using git diff --staged
	
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	creating a new branch for specific tasks. This helps you be more oraganized, also ensures that the master branch remains untouched by faulty/unwanted code.

How do the diagrams help you visualize the branch structure?
	helps identify  unreachable commits. and also helps to understand how easy it loose some commits if they are not handeled in a right mannner.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	merging two branches to geather combines their contents. It is easier to visiualize the process with the help of the diagram.
	Example:
	Brings extra features or bug fixes to the main project without causing harm to working code.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Pro's Automatic merging: None , that I can practically see. It may cause more problems and overload.
	Con's of Automatic merging: Git may merge the code in a wrong way. 

	Manual merging Pro's: Give the user to decide on which version of the code is more beneficial. Aloows a chance for correction in case there are any errors.
	Manual merging Con's: Can take up more mans hours at work.